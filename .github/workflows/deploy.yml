name: "Build wheels and deploy"

on:
  push:
    tags:
      - '*.*.*'

jobs:
  wheels_manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Init C core submodule
      run: git submodule update --init
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install OS dependencies
      run:
        sudo apt-get install gfortran flex bison
    - name: Install Python dependencies
      run: |
        # Pypi has no pip by default, and ubuntu blocks python -m ensurepip
        # However, Github runners are supposed to have pip installed by default
        # https://docs.github.com/en/actions/guides/building-and-testing-python
        #wget -qO- https://bootstrap.pypa.io/get-pip.py | python
        python -m pip install --upgrade pip
        pip install cibuildwheel
    - name: Wheels (linux)
      env:
        CIBW_BEFORE_BUILD: "yum install -y flex bison libxml2-devel zlib-devel && python setup.py build_c_core"
        CIBW_TEST_COMMAND: "cd {project} && python -m unittest"
        CIBW_SKIP: "cp27-* pp27-* cp35-*"
      run: |
        python setup.py -q sdist
        python -m cibuildwheel --output-dir wheelhouse
    - name: Upload source dist
      uses: actions/upload-artifact@v2
      with:
        name: source-dist
        path: dist/python-igraph-*.tar.gz
    - name: Upload linux wheels
      uses: actions/upload-artifact@v2
      with:
        name: linux-wheels
        path: wheelhouse/*.whl

  wheels_osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Init C core submodule
      run: git submodule update --init
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install OS dependencies
      run:
        brew install autoconf automake libtool
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cibuildwheel
    - name: Wheels (OSX)
      run: |
        python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BEFORE_BUILD: "python setup.py build_c_core"
        CIBW_TEST_COMMAND: "cd {project} && python -m unittest"
        CIBW_SKIP: "cp27-* pp27-* cp35-*"
    - name: Upload linux wheels
      uses: actions/upload-artifact@v2
      with:
        name: OSX-wheels
        path: wheelhouse/*.whl

  create_release:
    runs-on: ubuntu-latest
    needs:
    - wheels_manylinux
    - wheels_osx
    steps:
    - name: "Download artifacts: source dist"
      uses: actions/download-artifact@v2
      with:
        name: source-dist
        path: dist

    - name: "Download artifacts: linux wheels"
      uses: actions/download-artifact@v2
      with:
        name: linux-wheels
        path: wheelhouse

    - name: "Download artifacts: OSX wheels"
      uses: actions/download-artifact@v2
      with:
        name: OSX-wheels
        path: wheelhouse

    - name: "List contents of artifact folders"
      run: |
        echo "dist folder:"
        ls -lh dist
        echo "wheelhouse folder:"
        ls -lh wheelhouse

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload binaries and source
      uses: alexellis/upload-assets@0.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        asset_paths: '["wheelhouse/*.whl", "dist/python-igraph-*.tar.gz"]'

