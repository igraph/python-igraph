name: Build and test, upload to PyPI on release

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install OS dependencies (macOS)
        if: runner.os == 'macOS'
        run:
          brew install ninja autoconf automake libtool cmake

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BEFORE_BUILD_MACOS: "python setup.py build_c_core"
          CIBW_BEFORE_BUILD_LINUX: "yum install -y flex bison libxml2-devel zlib-devel && pip install cmake && python setup.py build_c_core"
          CIBW_TEST_COMMAND: "cd {project} && python -m unittest"
          CIBW_SKIP: "cp27-* pp27-* cp35-*"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_wheel_win:
    name: Build wheels on Windows
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install OS dependencies
        run: |
          choco install winflexbison3 ninja
          %VCPKG_INSTALLATION_ROOT%\vcpkg.exe integrate install
          %VCPKG_INSTALLATION_ROOT%\vcpkg.exe install libxml2:x64-windows-static-md
        shell: cmd

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BEFORE_BUILD: "pip install delvewheel && python setup.py build_c_core"
          CIBW_TEST_COMMAND: "cd /d {project} && python -m unittest"
          CIBW_SKIP: "cp27-* pp27-* cp35-* *-win32"
          IGRAPH_CMAKE_EXTRA_ARGS: -DCMAKE_BUILD_TYPE=RelWithDebInfo -DVCPKG_TARGET_TRIPLET=x64-windows-static-md -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake
          IGRAPH_EXTRA_LIBRARY_PATH: C:/vcpkg/installed/x64-windows-static-md/lib/
          IGRAPH_STATIC_EXTENSION: True
          IGRAPH_EXTRA_LIBRARIES: libxml2,lzma,zlib,iconv,charset
          IGRAPH_EXTRA_DYNAMIC_LIBRARIES: wsock32,ws2_32

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Install OS dependencies
        run:
          sudo apt install ninja-build cmake flex bison

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: |
          python setup.py build_c_core
          python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_wheel_win, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/